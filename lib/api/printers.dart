// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.1.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`, `fmt`, `from`, `from`

///获取全部的打印机.
Future<List<LddWinPrinter>> lddGetAllPrinters() =>
    RustLib.instance.api.crateApiPrintersLddGetAllPrinters();

///根据名称获取打印机
Future<LddWinPrinter?> lddGetPrinterByName({required String name}) =>
    RustLib.instance.api.crateApiPrintersLddGetPrinterByName(name: name);

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<LddWinPrinter>>
abstract class LddWinPrinter implements RustOpaqueInterface {
  String get driverName;

  bool get isDefault;

  bool get isShared;

  String get location;

  String get name;

  LddPrinterState get state;

  String get systemName;

  String get uri;

  set driverName(String driverName);

  set isDefault(bool isDefault);

  set isShared(bool isShared);

  set location(String location);

  set name(String name);

  set state(LddPrinterState state);

  set systemName(String systemName);

  set uri(String uri);

  ///打印数据
  Future<bool> writeData({required List<int> buffer, String? jobName});

  ///打印文件
  Future<bool> writeFile({required String filePath, String? jobName});
}

enum LddPrinterState {
  ready,
  paused,
  printing,
  unknown,
  ;
}
